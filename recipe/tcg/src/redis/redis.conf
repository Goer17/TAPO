# 监听所有网络接口，这在 Kubernetes 中是必要的，因为 Pod IP 是动态的
bind 0.0.0.0

# 保护模式，如果你的 Redis 不需要密码且只在内部网络访问，可以考虑关闭。
# 但在 Kubernetes 环境中，通常建议通过 Secret 管理密码。
# protected-mode yes
# requirepass yoursecurepassword # 强烈建议设置密码

# 最大客户端连接数，考虑到你的峰值并发是 6000，这里设置一个稍大的值
maxclients 10000

# TCP backlog 队列大小。在高并发连接请求时，这个值需要足够大。
# 默认是 511，可以适当调大。注意这个值也受限于操作系统的 /proc/sys/net/core/somaxconn
tcp-backlog 8192

# 内存淘汰策略设置为 allkeys-lru，当内存不足时，淘汰最近最少使用的 key
maxmemory-policy allkeys-lru

# 设置 Redis 可以使用的最大内存。这个值需要根据你的 Kubernetes Pod 的内存限制来合理设置。
# 假设你给 Pod 分配了 8GB 内存，可以给 Redis 设置 6GB 或 7GB，留一些给操作系统和其他进程。
maxmemory 28gb

# 其他可以考虑的优化参数 (根据实际测试调整)
# tcp-keepalive 300 # TCP keepalive 时间，有助于检测断开的连接

# 持久化配置 (如果需要)
# 如果你需要数据持久化，可以选择 RDB 或 AOF。在 Kubernetes 中，通常会配合 PersistentVolumeClaim (PVC) 使用。
# save 900 1
# save 300 10
# save 60 10000
# appendonly no # 如果使用 AOF，改为 yes

# 日志级别
loglevel notice
# logfile "" # 默认输出到 stdout，适合 Docker/Kubernetes
